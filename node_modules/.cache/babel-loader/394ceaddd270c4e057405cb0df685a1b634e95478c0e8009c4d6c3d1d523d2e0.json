{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PROJECTS\\\\WEB DEV\\\\REACTT\\\\reactt\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport yellowBlob from \"./img/blob-yellow.png\";\nimport blueBlob from \"./img/blob-blue.png\";\nimport StartScreen from './comps/startScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //   const [questions,setQuestions] = React.useState([])\n  //   const shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\n\n  //   React.useEffect(() => {\n  //     async function getapi() {\n  //         const res = await fetch(\"https://opentdb.com/api.php?amount=3&difficulty=easy&type=multiple\")\n  //         const data = await res.json()\n  //         let Q = []\n  //         data.results.forEach( question =>{\n  //           Q.push({\n  //             id: nanoid(),\n  //             answers : shuffleArray([...question.incorrect_answers, question.correct_answer]),\n  //             question: question.question,\n  //             correct : question.correct_answer,\n  //             checked : false,\n  //             selected: null\n  //           })\n  //         })\n  //         setQuestions(Q)\n  //       }\n  //     getapi()\n\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: yellowBlob,\n      className: \"blobs-yellow\",\n      alt: \"blob\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(StartScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: blueBlob,\n      className: \"blobs-blue\",\n      alt: \"blob\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","yellowBlob","blueBlob","StartScreen","App"],"sources":["C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/reactt/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport yellowBlob from \"./img/blob-yellow.png\"\nimport blueBlob from \"./img/blob-blue.png\"\nimport StartScreen from './comps/startScreen';\n\n\nfunction App() {\n\n//   const [questions,setQuestions] = React.useState([])\n//   const shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\n\n//   React.useEffect(() => {\n//     async function getapi() {\n//         const res = await fetch(\"https://opentdb.com/api.php?amount=3&difficulty=easy&type=multiple\")\n//         const data = await res.json()\n//         let Q = []\n//         data.results.forEach( question =>{\n//           Q.push({\n//             id: nanoid(),\n//             answers : shuffleArray([...question.incorrect_answers, question.correct_answer]),\n//             question: question.question,\n//             correct : question.correct_answer,\n//             checked : false,\n//             selected: null\n//           })\n//         })\n//         setQuestions(Q)\n//       }\n//     getapi()\n\n// }, [])\n\n\n  return (\n         <div>\n           <img src= {yellowBlob} className='blobs-yellow' alt='blob' />\n           <StartScreen />\n           <img src= {blueBlob} className='blobs-blue' alt='blob'/>\n   \n         </div>\n \n  );\n}\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,WAAW,MAAM,qBAAqB;AAAC;AAG9C,SAASC,GAAG,GAAG;EAEf;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGE,oBACO;IAAA,wBACE;MAAK,GAAG,EAAGH,UAAW;MAAC,SAAS,EAAC,cAAc;MAAC,GAAG,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7D,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf;MAAK,GAAG,EAAGC,QAAS;MAAC,SAAS,EAAC,YAAY;MAAC,GAAG,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEpD;AAGf;AAAC,KApCQE,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}