{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PROJECTS\\\\WEB DEV\\\\REACTT\\\\reactt\\\\src\\\\comps\\\\questionOne.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { decode } from 'html-entities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuestionOne(props) {\n  _s();\n  const [s, setS] = React.useState(false);\n  function clickAnswer(answer, currentQuestion) {\n    props.updateselected(currentQuestion, answer);\n    setS(true);\n  }\n  const styles = {\n    backgroundColor: s ? \"#D6DBF5\" : \"transparent\"\n  };\n  const allAnswer = props.allAnswers.map((answer, index) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles,\n      className: \"answer-btn\",\n      onClick: () => clickAnswer(answer, props.question),\n      children: [\" \", answer, \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: [\" \", decode(props.question), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers-btn-container\",\n      children: [\" \", decode(allAnswer), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionOne, \"UfevwIcUsTo+ka6oDeScpwMjmQE=\");\n_c = QuestionOne;\nvar _c;\n$RefreshReg$(_c, \"QuestionOne\");","map":{"version":3,"names":["React","decode","QuestionOne","props","s","setS","useState","clickAnswer","answer","currentQuestion","updateselected","styles","backgroundColor","allAnswer","allAnswers","map","index","question"],"sources":["C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/reactt/src/comps/questionOne.js"],"sourcesContent":["import React from 'react';\r\nimport {decode} from 'html-entities';\r\n\r\nexport default function QuestionOne(props){\r\n\r\n\r\nconst [s,setS] = React.useState(false)\r\n\r\n\r\nfunction clickAnswer(answer, currentQuestion){\r\nprops.updateselected(currentQuestion, answer)\r\nsetS(true)\r\n\r\n \r\n}\r\n\r\nconst styles = {\r\n    backgroundColor: s ? \"#D6DBF5\"  : \"transparent\"\r\n}\r\nconst allAnswer = props.allAnswers.map((answer,index) => {\r\n\r\n    return (<button \r\n        style = {styles}\r\n        className='answer-btn'\r\n        key ={index}\r\n        onClick = {() => clickAnswer(answer, props.question) } \r\n        > {answer} </button>)\r\n} )\r\n    return(\r\n        <div className=\"question-container\">\r\n        <h1 className=\"question\"> {decode(props.question)} </h1>\r\n        <div className=\"answers-btn-container\"> {decode(allAnswer)} </div>\r\n      </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,eAAe;AAAC;AAErC,eAAe,SAASC,WAAW,CAACC,KAAK,EAAC;EAAA;EAG1C,MAAM,CAACC,CAAC,EAACC,IAAI,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;EAGtC,SAASC,WAAW,CAACC,MAAM,EAAEC,eAAe,EAAC;IAC7CN,KAAK,CAACO,cAAc,CAACD,eAAe,EAAED,MAAM,CAAC;IAC7CH,IAAI,CAAC,IAAI,CAAC;EAGV;EAEA,MAAMM,MAAM,GAAG;IACXC,eAAe,EAAER,CAAC,GAAG,SAAS,GAAI;EACtC,CAAC;EACD,MAAMS,SAAS,GAAGV,KAAK,CAACW,UAAU,CAACC,GAAG,CAAC,CAACP,MAAM,EAACQ,KAAK,KAAK;IAErD,oBAAQ;MACJ,KAAK,EAAIL,MAAO;MAChB,SAAS,EAAC,YAAY;MAEtB,OAAO,EAAI,MAAMJ,WAAW,CAACC,MAAM,EAAEL,KAAK,CAACc,QAAQ,CAAG;MAAA,gBACnDT,MAAM;IAAA,GAFHQ,KAAK;MAAA;MAAA;MAAA;IAAA,QAES;EAC5B,CAAC,CAAE;EACC,oBACI;IAAK,SAAS,EAAC,oBAAoB;IAAA,wBACnC;MAAI,SAAS,EAAC,UAAU;MAAA,gBAAGf,MAAM,CAACE,KAAK,CAACc,QAAQ,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACxD;MAAK,SAAS,EAAC,uBAAuB;MAAA,gBAAGhB,MAAM,CAACY,SAAS,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEZ;AAAC,GA/BuBX,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}