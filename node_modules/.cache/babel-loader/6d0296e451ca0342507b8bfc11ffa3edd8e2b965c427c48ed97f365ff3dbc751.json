{"ast":null,"code":"import _objectSpread from\"C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/Quiz game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/Quiz game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/Quiz game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import QuestionOne from'./questionOne';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Questions(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questionsAndAnswers=_useState4[0],setQuestionsAndAnswers=_useState4[1];var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),warningMsg=_React$useState2[0],setWarningMsg=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),count=_React$useState4[0],setCount=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),result=_React$useState6[0],setResults=_React$useState6[1];React.useEffect(function(){if(questions.length===0){fetch('https://opentdb.com/api.php?amount=5&category=21&difficulty=easy&type=multiple').then(function(respone){return respone.json();}).then(function(data){setQuestions(data.results);setQuestionsAndAnswers(data.results.map(function(object){return{question:object.question,shuffledAnswers:shuffleArray([].concat(_toConsumableArray(object.incorrect_answers),[object.correct_answer])),correctAnswer:object.correct_answer,selectedAnswer:\"\"};}));});}},[questions]);function updateselected(currentQuestion,answer){setQuestionsAndAnswers(questionsAndAnswers.map(function(object){return object.question===currentQuestion?_objectSpread(_objectSpread({},object),{},{selectedAnswer:answer}):object;}));}function checkAnswers(){var notAll=questionsAndAnswers.some(function(object){return object.selectedAnswer==='';});setWarningMsg(notAll);if(!notAll){questionsAndAnswers.forEach(function(object){if(object.selectedAnswer===object.correctAnswer){setCount(function(prevstate){return prevstate+1;});}});setResults(true);}}function playagain(){setQuestions([]);setQuestionsAndAnswers([]);setResults(false);setCount(0);}var shuffleArray=function shuffleArray(arr){return arr.sort(function(){return Math.random()-0.5;});};var Q=questionsAndAnswers.map(function(objects,index){return/*#__PURE__*/_jsx(QuestionOne,{question:objects.question,allAnswers:objects.shuffledAnswers,selectedAnswer:objects.selectedAnswer,correctAnswer:objects.correctAnswer,updateselected:updateselected,result:result},index);});return/*#__PURE__*/_jsxs(\"div\",{children:[Q,/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[warningMsg&&/*#__PURE__*/_jsx(\"p\",{className:\"warning-msg\",children:\" Please answer all question before checking \"}),questions.length>0&&!result?/*#__PURE__*/_jsx(\"button\",{className:\"check-btn\",onClick:checkAnswers,children:\" Check Answers\"}):null]}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"results\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"results-msg\",children:[\" You scored \",count,\"/ 5 correct answers \"]}),/*#__PURE__*/_jsx(\"button\",{className:\"play-again\",onClick:playagain,children:\" Play Again\"})]})]});}","map":{"version":3,"names":["React","useState","QuestionOne","Questions","questions","setQuestions","questionsAndAnswers","setQuestionsAndAnswers","warningMsg","setWarningMsg","count","setCount","result","setResults","useEffect","length","fetch","then","respone","json","data","results","map","object","question","shuffledAnswers","shuffleArray","incorrect_answers","correct_answer","correctAnswer","selectedAnswer","updateselected","currentQuestion","answer","checkAnswers","notAll","some","forEach","prevstate","playagain","arr","sort","Math","random","Q","objects","index"],"sources":["C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/Quiz game/src/comps/questionsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QuestionOne from './questionOne';\r\n\r\nexport default function Questions(){\r\n    const [questions,setQuestions] = useState([])\r\n    const [questionsAndAnswers,setQuestionsAndAnswers] = useState([])\r\n    const [warningMsg,setWarningMsg] = React.useState(false)\r\n    const [count,setCount] = React.useState(0)\r\n    const [result,setResults] = React.useState(false)\r\n\r\n      React.useEffect( () => {\r\n        if(questions.length === 0) {\r\n        fetch('https://opentdb.com/api.php?amount=5&category=21&difficulty=easy&type=multiple')\r\n        .then((respone) => respone.json())\r\n        .then((data) => {\r\n          setQuestions(data.results);\r\n\r\n          setQuestionsAndAnswers(data.results.map((object) => {\r\n              return{\r\n                question: object.question,\r\n                shuffledAnswers: shuffleArray([...object.incorrect_answers,\r\n                                                object.correct_answer]),\r\n                correctAnswer: object.correct_answer ,\r\n                selectedAnswer : \"\"                             \r\n\r\n              }\r\n          }))\r\n        })}\r\n      },[questions])\r\n\r\n    \r\n   function updateselected( currentQuestion, answer){\r\n    setQuestionsAndAnswers(questionsAndAnswers.map( (object) => {\r\n        return object.question === currentQuestion ? {...object, selectedAnswer: answer} : object\r\n    } ))\r\n   }\r\n   \r\n   function checkAnswers(){\r\n    const notAll = questionsAndAnswers.some( (object) => {\r\n     return  object.selectedAnswer === ''\r\n    }\r\n    )\r\n    setWarningMsg(notAll)\r\n     \r\n    if(!notAll) {\r\n      questionsAndAnswers.forEach( (object) => {\r\n        if(object.selectedAnswer === object.correctAnswer) {\r\n          setCount( prevstate => prevstate + 1 )\r\n        }\r\n      } )\r\n      setResults(true)\r\n    }\r\n\r\n   }\r\n   \r\n    function playagain(){\r\n      setQuestions([])\r\n      setQuestionsAndAnswers([])\r\n      setResults(false)\r\n      setCount(0)\r\n    }\r\n  const shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\r\n  const Q = questionsAndAnswers.map( (objects, index) => { \r\n    return (\r\n        <QuestionOne\r\n         key={index} \r\n         question = {objects.question}\r\n         allAnswers = {objects.shuffledAnswers}\r\n         selectedAnswer = {objects.selectedAnswer}\r\n         correctAnswer = {objects.correctAnswer}\r\n         updateselected = {updateselected}\r\n         result = {result}\r\n         />\r\n    )\r\n })\r\n \r\n    return(\r\n        <div>\r\n            {Q}\r\n            <div className='text-center'> \r\n            { warningMsg && <p className='warning-msg'> Please answer all question before checking </p>}\r\n            {questions.length > 0 && !result ? <button className='check-btn' onClick={checkAnswers}> Check Answers</button>\r\n             : null }\r\n             </div>\r\n             { result && <div className='results' >\r\n              <p className='results-msg' > You scored {count}/ 5 correct answers </p>\r\n              <button className='play-again' onClick={playagain}> Play Again</button>\r\n             </div>}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}