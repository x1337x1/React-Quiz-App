{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PROJECTS\\\\WEB DEV\\\\REACTT\\\\reactt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n  React.useEffect(() => {\n    async function getapi() {\n      const res = await fetch(\"https://opentdb.com/api.php?amount=3&difficulty=easy&type=multiple\");\n      const data = await res.json();\n      let Q = [];\n      data.results.forEach(question => {\n        Q.push({\n          id: nanoid,\n          answers: shuffleArray([...question.incorrect_answers]),\n          question: question.question,\n          correct: question.correct_answer,\n          checked: false\n        });\n      });\n      console.log(Q);\n    }\n    getapi();\n  }, []);\n\n  // let nums = [5,4,2,9,1,7,8]\n  // let s  = shuffleArray([...nums]) \n  // console.log(s)\n  // let empty = []\n  // nums.forEach(  (n,) => {\n  //  empty.push(n)\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","nanoid","App","shuffleArray","arr","sort","Math","random","useEffect","getapi","res","fetch","data","json","Q","results","forEach","question","push","id","answers","incorrect_answers","correct","correct_answer","checked","console","log"],"sources":["C:/Users/Administrator/Desktop/PROJECTS/WEB DEV/REACTT/reactt/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid'\n\n\nfunction App() {\n  const shuffleArray = (arr) => arr.sort(() => Math.random() - 0.5);\n  React.useEffect(() => {\n    async function getapi() {\n        const res = await fetch(\"https://opentdb.com/api.php?amount=3&difficulty=easy&type=multiple\")\n        const data = await res.json()\n        let Q = []\n        data.results.forEach( question =>{\n          Q.push({\n            id: nanoid,\n            answers : shuffleArray([...question.incorrect_answers]),\n            question: question.question,\n            correct : question.correct_answer,\n            checked : false\n          })\n        })\n        console.log(Q)\n        \n      }\n    getapi()\n\n}, [])\n\n\n// let nums = [5,4,2,9,1,7,8]\n// let s  = shuffleArray([...nums]) \n// console.log(s)\n// let empty = []\n// nums.forEach(  (n,) => {\n//  empty.push(n)\n// })\n\n\n\n\n\n  return (\n   \n<div>\n\n\n    \n</div>\n\n      \n      \n      \n    \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,QAAQ;AAAA;AAG/B,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,YAAY,GAAIC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;EACjEP,KAAK,CAACQ,SAAS,CAAC,MAAM;IACpB,eAAeC,MAAM,GAAG;MACpB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oEAAoE,CAAC;MAC7F,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7B,IAAIC,CAAC,GAAG,EAAE;MACVF,IAAI,CAACG,OAAO,CAACC,OAAO,CAAEC,QAAQ,IAAG;QAC/BH,CAAC,CAACI,IAAI,CAAC;UACLC,EAAE,EAAElB,MAAM;UACVmB,OAAO,EAAGjB,YAAY,CAAC,CAAC,GAAGc,QAAQ,CAACI,iBAAiB,CAAC,CAAC;UACvDJ,QAAQ,EAAEA,QAAQ,CAACA,QAAQ;UAC3BK,OAAO,EAAGL,QAAQ,CAACM,cAAc;UACjCC,OAAO,EAAG;QACZ,CAAC,CAAC;MACJ,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACZ,CAAC,CAAC;IAEhB;IACFL,MAAM,EAAE;EAEZ,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;EACA;EACA;EACA;EACA;;EAME,oBAEF;IAAA;IAAA;IAAA;EAAA,QAIM;AAON;AAAC,GAjDQP,GAAG;AAAA,KAAHA,GAAG;AAmDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}